package org.usfirst.frc.team1360.robot.util.pid;

public class PIDSpeedController {
	
	private double dP;
	private double dI;
	private double dD;

	private double dError;
	
	private double dInput;
	private double dOutput;
	private double dSetpoint;
	
	private long lPreviousTime;

	private double dErrorSum;
	private double dPError;
	private double dIError;
	private double dDError;
	
	public PIDSpeedController(double constantP, double constantI, double constantD)
	{
		this.dP = constantP;
		this.dI = constantI;
		this.dD = constantD;
	}

	public void SetConstants(double constantP, double constantI, double constantD)
	{
		this.dP = constantP;
		this.dI = constantI;
		this.dD = constantD;
	}

	public void SetP(double constantP) { this.dP = constantP; }
	public double GetP() { return dP; }

	public void SetI(double constantI) { this.dI = constantI; }
	public double GetI() { return dI; }

	public void SetD(double constantD) { this.dD = constantD; }
	public double GetD() { return dD; }
	
	public void SetInput(double input) { this.dInput = input; }
	public double GetInput() { return dInput; }
	
	public double GetOutput() { return dOutput; }
	
	public void SetSetpoint(double setpoint) { this.dSetpoint = setpoint; }
	public double GetSetpoint() { return dSetpoint; }
	
	public double GetError() { return dError; }
	
	public void CalculateError()
	{
		// Source: http://brettbeauregard.com/blog/2011/04/improving-the-beginners-pid-introduction/
		long lCurrentTime = System.currentTimeMillis();
		double dTimeSinceLastCalculate = (double)(lCurrentTime - lPreviousTime);
		
		// Compute the error components for the P, I, and D terms.
		dPError = dSetpoint - dInput;
		dIError = dIError + (dPError * dTimeSinceLastCalculate);
		dDError = (dPError - dError) / dTimeSinceLastCalculate;
		
		// Compute the output.
		dOutput = dP * dPError + dI * dIError + dD * dDError;
		
		dError = dPError;
		lPreviousTime = lCurrentTime;
	}
}
 