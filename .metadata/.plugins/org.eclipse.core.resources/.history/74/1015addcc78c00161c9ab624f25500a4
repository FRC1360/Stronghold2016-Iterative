package org.usfirst.frc.team1360.robot.util.pid;

public class PIDSpeedController {
	
	private double P;
	private double I;
	private double D;

	private double Error;
	
	private double Input;
	private double Output;
	private double Setpoint;
	
	private long PreviousTime;

	private double ErrorSum;
	private double PError;
	private double IError;
	private double DError;
	
	public PIDSpeedController(double constantP, double constantI, double constantD)
	{
		this.P = constantP;
		this.I = constantI;
		this.D = constantD;
	}

	public void SetConstants(double constantP, double constantI, double constantD)
	{
		this.P = constantP;
		this.I = constantI;
		this.D = constantD;
	}

	public void SetP(double constantP) { this.P = constantP; }
	public double GetP() { return P; }

	public void SetI(double constantI) { this.I = constantI; }
	public double GetI() { return I; }

	public void SetD(double constantD) { this.D = constantD; }
	public double GetD() { return D; }
	
	public void SetInput(double input) { this.Input = input; }
	public double GetInput() { return Input; }
	
	public double GetOutput() { return Output; }
	
	public void SetSetpoint(double setpoint) { this.Setpoint = setpoint; }
	public double GetSetpoint() { return Setpoint; }
	
	public double GetError() { return Error; }
	
	public void CalculateError()
	{
		// Source: http://brettbeauregard.com/blog/2011/04/improving-the-beginners-pid-introduction/
		long CurrentTime = System.currentTimeMillis();
		double TimeSinceLastCalculate = (double)(CurrentTime - PreviousTime);
		
		// Compute the error components for the P, I, and D terms.
		PError = Setpoint - Input;
		IError = IError + (PError * TimeSinceLastCalculate);
		DError = (PError - Error) / TimeSinceLastCalculate;
		
		// Compute the output.
		Output = P * PError + I * IError + D * DError;
		
		Error = PError;
		PreviousTime = CurrentTime;
		
	}
}
 